<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ocean Parcels 工具包无法穿越180°W</title>
      <link href="/2024/04/11/About-Ocean-Parcels-cannot-cross-the-north-pole/"/>
      <url>/2024/04/11/About-Ocean-Parcels-cannot-cross-the-north-pole/</url>
      
        <content type="html"><![CDATA[<p>最近需要修改之前的粒子追踪代码，发现粒子怎么也穿不过180°W。（之前实验的粒子轨迹不涉及西北极（波弗特流涡）那边的事情）</p><p>但是想法又变了 哈哈哈哈 这就是我！！ 老变！</p><p>查了半天 原来官方教程已经给出了答案……链接如下：</p><p><a href="https://docs.oceanparcels.org/en/latest/examples/tutorial_periodic_boundaries.html">Periodic boundaries — Parcels v3.0.2-13-gdaa4b06 documentation (oceanparcels.org)</a></p><p>只要加入周期性边界即可</p><div class="highlight-wrap" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># set periodic BC</span></span><br><span class="line">fieldset.add_constant(<span class="string">&quot;halo_west&quot;</span>, fieldset.U.grid.lon[<span class="number">0</span>])</span><br><span class="line">fieldset.add_constant(<span class="string">&quot;halo_east&quot;</span>, fieldset.U.grid.lon[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">fieldset.add_periodic_halo(zonal=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">periodicBC</span>(<span class="params">particle, fieldset, time</span>):</span><br><span class="line">    <span class="keyword">if</span> particle.lon &lt; fieldset.halo_west:</span><br><span class="line">        particle_dlon += fieldset.halo_east - fieldset.halo_west</span><br><span class="line">    <span class="keyword">elif</span> particle.lon &gt; fieldset.halo_east:</span><br><span class="line">        particle_dlon -= fieldset.halo_east - fieldset.halo_west</span><br></pre></td></tr></table></figure></div><p>将上述代码加在<code>pset.execute</code>之前就行，并且要在kernels里面加入<code>periodicBC</code></p><p>ps: 教程上说需要满足：<code>fieldset.U.lon[:, 0] &gt;= fieldset.U.lon[:, -1]</code></p><p>但是我的情况是反过来的，所以就改了官方的代码。</p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240411220928822.png" alt="image-20240411220928822"></p><p>记录一下~</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在本地打开服务器的jupyter_notebook</title>
      <link href="/2024/03/28/open-server-jupyter-notebook-on-local/"/>
      <url>/2024/03/28/open-server-jupyter-notebook-on-local/</url>
      
        <content type="html"><![CDATA[<p>参考链接：<a href="https://zhuanlan.zhihu.com/p/427234430">2021.10.29-mobaXterm远程连接jupyter notebook - 知乎 (zhihu.com)</a></p><p>因为近期服务器从账号密码登录，改为了ssh密钥登陆，之前远程打开jupyter notebook的流程不管用liao</p><p>现在找到的最佳方案是 建立一个local SSH Tunnel</p><p>先把这个Tunnel连接上，再去服务器上面打开jupyter 就可以在本地浏览器看到页面啦~~~</p><p>昨天捣鼓了半天github的学生优惠，因为mac端的那个termius会员好贵……</p><p>termius上一样的操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一颗荔枝核的成长</title>
      <link href="/2024/03/22/recoding-lichee-life/"/>
      <url>/2024/03/22/recoding-lichee-life/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/861d8a075083c20d979fc7d620d7ffb.jpg" alt="861d8a075083c20d979fc7d620d7ffb"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/5737dfb38c88db2a06bc9019e9b71eb.jpg" alt="5737dfb38c88db2a06bc9019e9b71eb"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/5f8dd15034cf03047f0315316409bcc.jpg" alt="5f8dd15034cf03047f0315316409bcc"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/9113278c0999a5a7c8e33720e5477b3.jpg" alt="9113278c0999a5a7c8e33720e5477b3"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/b86d64b1993e1b8f77e9bdc36d8dd52.jpg" alt="b86d64b1993e1b8f77e9bdc36d8dd52"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/b0fdb5d160a0a964a03df7ec41b5af5.jpg" alt="b0fdb5d160a0a964a03df7ec41b5af5"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/bf24ab497f62775c292c14cee977798.jpg" alt="bf24ab497f62775c292c14cee977798"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一棵奇怪的树</title>
      <link href="/2024/03/22/A-strange-tree/"/>
      <url>/2024/03/22/A-strange-tree/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240322184252.jpg" alt="微信图片_20240322184252"></p><p>这树叶长得真搞笑啊</p><p>哈哈哈哈哈哈哈哈哈</p>]]></content>
      
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>generate ssh key to login server</title>
      <link href="/2024/03/22/generate-ssh-key-to-login-server/"/>
      <url>/2024/03/22/generate-ssh-key-to-login-server/</url>
      
        <content type="html"><![CDATA[<h1 id="一、本地PC端操作流程："><a href="#一、本地PC端操作流程：" class="headerlink" title="一、本地PC端操作流程："></a>一、本地PC端操作流程：</h1><p><strong>推荐使用MobaXterm登陆；下载地址：</strong><a href="https://mobaxterm.mobatek.net/download.html">MobaXterm Xserver with SSH, telnet, RDP, VNC and X11 - Download (mobatek.net)</a></p><ol><li>生成证书口令</li></ol><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322134618408.png" alt="image-20240322134618408"></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322134643908.png" alt="image-20240322134643908"></p><p>记得用鼠标在空白处滑动，好像它的随机数是由鼠标轨迹加密的。</p><ol start="2"><li>复制添加public key的内容（第一个红框）到各自home目录下的&#x2F;.ssh&#x2F;authorized_keys文件（此目录和文件夹需要自己创建）里，注意每个key是一整行，key的内容不要有换行；不同的key要在不同行内。</li></ol><p>（建议先存储在txt里 方便粘贴）</p><p><strong>再将这个txt文件复制一个副本， 将整个文件改名为authorized_keys （之后直接将这个文件拖进去就好）</strong></p><p>Key comment备注一下信息便于自己分辨用途或来源</p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322134823065.png" alt="image-20240322134823065"></p><ol start="3"><li>Save private key到本地一个文件（私钥）</li></ol><p>此步骤生成一个后缀名为.ppk的文件，请妥善保存，并知晓存储的位置。</p><ol start="4"><li>Use private key选择该文件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322135412652.png" alt="image-20240322135412652"></p><p>#二 、 在服务器端的操作</p><ol><li><p>先用原来的账号密码登陆到自己的文件夹；注意端口更改为：*****</p></li><li><p>生成和粘贴口令</p></li></ol><p>注意每个人要用到各自的目录下，不要放root目录，图片是范例</p><p>在自己的目录下，赋予文件权限<br> <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -m 700 .ssh/</span><br><span class="line"><span class="built_in">cd</span> .ssh/</span><br></pre></td></tr></table></figure></div></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322135026411.png" alt="image-20240322135026411"></p><p><strong>将authorized_keys文件 拖进这个 .ssh&#x2F;文件夹里面</strong></p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322135141386.png" alt="image-20240322135141386"></p><p>再修改这个文件的权限 </p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 authorized_keys</span><br></pre></td></tr></table></figure></div><ol start="3"><li>修改自己原来的密码，要复杂且需要有大小写字母、数字及特殊符号。（命令：passwd）</li><li>自这次修改密码之后，请大家不要再用账号密码登陆。要用证书登陆，切记切记。（在ssh页面里删除密码）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322135311356.png" alt="image-20240322135311356"></p>]]></content>
      
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置环境及NEMO源代码下载</title>
      <link href="/2024/03/21/Download%20NEMO%20code%20and%20environment%20configuration/"/>
      <url>/2024/03/21/Download%20NEMO%20code%20and%20environment%20configuration/</url>
      
        <content type="html"><![CDATA[<h1 id="0-了解超算及编译环境"><a href="#0-了解超算及编译环境" class="headerlink" title="0. 了解超算及编译环境"></a>0. 了解超算及编译环境</h1><ul><li><p>硬件信息</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lscpu</span><br></pre></td></tr></table></figure></div></li><li><p>系统信息</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/os-release</span><br></pre></td></tr></table></figure></div></li><li><p>查看自带的软件</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">module avail</span><br></pre></td></tr></table></figure></div></li><li><p>提交作业的系统—-LSF作业调度系统</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bsub -q ocean_530 -o %J.out mpirun -n 8 ./nemo <span class="comment"># 提交命令</span></span><br><span class="line">bjobs -l JobID <span class="comment"># 查看作业运行状况</span></span><br></pre></td></tr></table></figure></div><p>  <a href="https://scc.ustc.edu.cn/zlsc/user_doc/html/lsf/lsf.html">基本操作参考</a></p></li><li><p>师姐之前装好的<br>conda、cdo-1.9.9、ncl（在conda的ncl_stable环境里）、mpich3.0.4 、NETCDF4.1.3、Cmake、ECCODES</p></li></ul><h1 id="一、安装XIOS的依赖项"><a href="#一、安装XIOS的依赖项" class="headerlink" title="一、安装XIOS的依赖项"></a>一、安装XIOS的依赖项</h1><h2 id="初始的-bashrc"><a href="#初始的-bashrc" class="headerlink" title="初始的.bashrc"></a>初始的<code>.bashrc</code></h2><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source global definitions</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/bashrc ]; <span class="keyword">then</span></span><br><span class="line">        . /etc/bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#module load</span></span><br><span class="line"></span><br><span class="line">module load python/3.7.3</span><br><span class="line">module load mkl/2019.1.144</span><br><span class="line">module load gcc/4.9.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># complier</span></span><br><span class="line"><span class="built_in">export</span> CC=<span class="string">&quot;gcc&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXX=<span class="string">&quot;g++&quot;</span></span><br><span class="line"><span class="built_in">export</span> FC=<span class="string">&quot;gfortran&quot;</span></span><br><span class="line"><span class="built_in">export</span> COMPILER=<span class="string">&quot;<span class="variable">$FC</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> FCFLAGS=<span class="string">&quot;-m64&quot;</span></span><br><span class="line"><span class="built_in">export</span> F77=<span class="string">&quot;gfortran&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you don&#x27;t like systemctl&#x27;s auto-paging feature:</span></span><br><span class="line"><span class="comment"># export SYSTEMD_PAGER=</span></span><br><span class="line"><span class="built_in">export</span> HOME=<span class="string">&quot;/data/gpfs01/dir1&quot;</span></span><br><span class="line"><span class="built_in">export</span> MR_DIR=<span class="string">&quot;/data/gpfs01/dir1/Build_WRF/LIBRARIES&quot;</span></span><br></pre></td></tr></table></figure></div><h2 id="文件树结构"><a href="#文件树结构" class="headerlink" title="文件树结构"></a>文件树结构</h2><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/  <span class="variable">$HOME</span> </span><br><span class="line">|--dir_name2 <span class="comment"># directory of linux </span></span><br><span class="line">|--Build_NEMO <span class="comment"># main bulid NEMO directory. </span></span><br><span class="line">|--LIBRARIES <span class="comment"># NEMO library directory. </span></span><br><span class="line">|--src <span class="comment"># source code directory &amp; all tar.gz files. </span></span><br><span class="line">|--nemo_4.2.0 <span class="comment"># NEMO directory.</span></span><br></pre></td></tr></table></figure></div><h2 id="下载安装文件"><a href="#下载安装文件" class="headerlink" title="下载安装文件"></a>下载安装文件</h2><p> 下载所需要的依赖包文件，编译和安装</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.zlib.net/fossils/zlib-1.2.11.tar.gz</span><br><span class="line">wget http:........etc.</span><br></pre></td></tr></table></figure></div><p>所有需要的依赖包见下图</p><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322112250779.png" alt="image-20240322112250779"></p><h2 id="编译包"><a href="#编译包" class="headerlink" title="编译包"></a>编译包</h2><p>每安装一个包，要将它的所处路径写进<code>.bashrc</code>中。</p><ol><li>安装zlib<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf zlib-1.2.11.tar.gz</span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.11</span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib</span><br><span class="line"></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装curl<div class="highlight-wrap" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf curl-7.77.0.tar.gz</span><br><span class="line">cd curl-7.77.0</span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/curl --with-zlib=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib --without-ssl</span><br><span class="line"></span><br><span class="line">make -j8 |&amp; tee make_log.txt</span><br><span class="line">make install |&amp; tee make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装hdf5<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf hdf5-1.12.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> hdf5-1.12.1 </span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5 --with-zlib=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib --enable-fortran --enable-static=<span class="built_in">yes</span> --enable-parallel --enable-shared   --enable-fortran2003  --enable-unsupported</span><br><span class="line"></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装parallel-NetCDF<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tar vxzf pnetcdf-1.12.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pnetcdf-1.12.3</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib/include &quot;</span> </span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib/lib &quot;</span> </span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/PNETCDF-1.12.3  --enable-shared --enable-large-file-test --enable-null-byte-header-padding --enable-burst-buffering --enable-profiling --enable-static</span><br><span class="line"></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装netcdf-c-4.9.2<br> (因为4.8版本有一个和HDF51.12 通不过的测试) 要逐行粘贴</li></ol><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf netcdf-c-4.9.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> netcdf-c-4.9.2</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/curl/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/PNETCDF-1.12.3/include&quot;</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/curl/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -Wl,-rpath=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/PNETCDF-1.12.3/lib&quot;</span> </span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf --with-hdf5=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5 --enable-shared --enable-netcdf-4 --enable-netcdf4 --enable-dap --with-pic --disable-doxygen --enable-static --enable-largefile --disable-libxml2  --enable-pnetcdf --enable-parallel-tests </span><br><span class="line"></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div><ul><li><p>一定要添上这两个选项<code>--enable-netcdf-4 --enable-netcdf4</code>，否则在XIOS安装时会报错<br>  检查是否打开的命令：<code>nc-config --all</code></p><p>  <img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322112338017.png" alt="image-20240322112338017"></p><ol start="6"><li>安装netcdf-fortran<br> 在这步之前提前安装了mpich，并将环境变量改了，见8  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  tar xvzf netcdf-fortran-4.6.0.tar.gz</span><br><span class="line">  <span class="built_in">cd</span> netcdf-fortran-4.6.0</span><br><span class="line">  </span><br><span class="line"><span class="built_in">export</span> CC=mpicc -lstdc++</span><br><span class="line"><span class="comment">#  告知库文件位置</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib: LD_LIBRARY_PATH&quot;</span></span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include&quot;</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -Wl,-rpath=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -Wl,-rpath=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib &quot;</span></span><br><span class="line"><span class="built_in">export</span> CFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include&quot;</span></span><br><span class="line"><span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include&quot;</span></span><br><span class="line"><span class="built_in">export</span> FCFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置参数</span></span><br><span class="line"> CPPFLAGS=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include  -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include&quot;</span> \ </span><br><span class="line">  LDFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib&quot;</span>  \</span><br><span class="line"> ./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf --enable-shared --with-pic --disable-doxygen  --enable-largefile --enable-static</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装netcdf-cxx  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf netcdf-cxx4-4.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> netcdf-cxx4-4.3.1</span><br><span class="line"><span class="comment"># configure</span></span><br><span class="line">CPPFLAGS=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include&quot;</span>  </span><br><span class="line">LDFLAGS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib&quot;</span>  </span><br><span class="line"> LIBS=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib -lhdf5_hl -lhdf5 -lz  -lnetcdf -lnetcdff&quot;</span></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf --enable-shared --with-pic --disable-doxygen  --enable-largefile --enable-static</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br></pre></td></tr></table></figure></div></li><li>安装mpich(–with-device&#x3D;ch4:ofi,加上这个选项编译)  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf mpich-4.1.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mpich-4.1.1</span><br><span class="line"></span><br><span class="line">./configure --prefix=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/mpich-4.1.1 --with-device=ch4:ofi</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make -j8 |&amp; <span class="built_in">tee</span> make_log.txt</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">make install |&amp; <span class="built_in">tee</span> make_install.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></li><li>修改环境变量，最后的<code>.bashrc</code>文件如下：  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source global definitions</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/bashrc ]; <span class="keyword">then</span></span><br><span class="line">        . /etc/bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#module load</span></span><br><span class="line"></span><br><span class="line">module load python/3.7.3</span><br><span class="line">module load mkl/2019.1.144</span><br><span class="line">module load gcc/4.9.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you don&#x27;t like systemctl&#x27;s auto-paging feature:</span></span><br><span class="line"><span class="comment"># export SYSTEMD_PAGER=</span></span><br><span class="line"><span class="built_in">export</span> HOME=<span class="string">&quot;/data/gpfs01/dir1&quot;</span></span><br><span class="line"><span class="built_in">export</span> MR_DIR=<span class="string">&quot;/data/gpfs01/dir1/Build_WRF/LIBRARIES&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># complier</span></span><br><span class="line"><span class="built_in">export</span> CC=mpicc</span><br><span class="line"><span class="built_in">export</span> CXX=mpicxx</span><br><span class="line"><span class="built_in">export</span> FC=mpif90</span><br><span class="line"><span class="built_in">export</span> F77=mpif77</span><br><span class="line"><span class="built_in">export</span> COMPILER=<span class="string">&quot;<span class="variable">$FC</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#export CC=&quot;gcc&quot;</span></span><br><span class="line"><span class="comment">#export CXX=&quot;g++&quot;</span></span><br><span class="line"><span class="comment">#export FC=&quot;gfortran&quot;</span></span><br><span class="line"><span class="comment">#export COMPILER=&quot;$FC&quot;</span></span><br><span class="line"><span class="comment">#export FCFLAGS=&quot;-m64&quot;</span></span><br><span class="line"><span class="comment">#export F77=&quot;gfortran&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for PnetCDF</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/PNETCDF-1.12.3/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/PNETCDF-1.12.3/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for NETCDF</span></span><br><span class="line"><span class="built_in">export</span> NETCDF=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/netcdf&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/netcdf/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$NETCDF</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for curl</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/curl/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/curl/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### HDF5</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/hdf5/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$HOME</span>/dir_name2/Build_NEMO/LIBRARIES/hdf5/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for MY MPICH</span></span><br><span class="line"><span class="built_in">export</span> MPICH=<span class="string">&quot;/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/mpich-4.1.1&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$MPICH</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;<span class="variable">$MPICH</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span>&quot;</span></span><br></pre></td></tr></table></figure></div></li></ol><h1 id="二、安装XIOS"><a href="#二、安装XIOS" class="headerlink" title="二、安装XIOS"></a>二、安装XIOS</h1><ol><li><p>下载XIOS仓库</p>  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/dir_name2/Build_NEMO/LIBRARIES/</span><br><span class="line">svn co http://forge.ipsl.jussieu.fr/ioserver/svn/XIOS/trunk xios-t</span><br></pre></td></tr></table></figure></div></li><li><p>复制并修改<code>arch</code>文件夹里的配置（根据学校的超算信息和所用的编译器，这里是用的gcc&#x2F;4.9.0。用intel的试了几遍老是报错）<br>参考信息：<br><a href="https://nemo-related.readthedocs.io/en/latest/compilation_notes/nemo42.html">XIOS-Trunk+nemo4.2.0+gcc8.3.0</a><br><a href="http://christopherbull.com.au/nemo/nemo-wed12-01/">XIOS-2+nemo+Intel</a><br><a href="https://sites.nemo-ocean.io/user-guide/install.html#">NEMO4.2.0-User-guide</a></p><ul><li><code>arch-XMU_HPC.fcm</code>的内容<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment">###################                Projet XIOS               ###################</span></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"></span><br><span class="line">%CCOMPILERmpicc</span><br><span class="line">%FCOMPILERmpif90</span><br><span class="line">%LINKER     mpif90</span><br><span class="line"></span><br><span class="line">%BASE_CFLAGS    -ansi -w -D_GLIBCXX_USE_CXX11_ABI=0  -std=c++11</span><br><span class="line"><span class="comment">#%BASE_CFLAGS    -ansi -w</span></span><br><span class="line">%PROD_CFLAGS    -O3 -DBOOST_DISABLE_ASSERTS</span><br><span class="line">%DEV_CFLAGS     -g -O2</span><br><span class="line">%DEBUG_CFLAGS   -g</span><br><span class="line"></span><br><span class="line">%BASE_FFLAGS    -D__NONE__</span><br><span class="line">%PROD_FFLAGS    -O3</span><br><span class="line">%DEV_FFLAGS     -g -O2</span><br><span class="line">%DEBUG_FFLAGS   -g</span><br><span class="line"></span><br><span class="line">%BASE_INC      -D__NONE__</span><br><span class="line">%BASE_LD        -lstdc++</span><br><span class="line"><span class="comment">#-mkl=parallel</span></span><br><span class="line"><span class="comment">#%BASE_LD        -mkl=parallel</span></span><br><span class="line"></span><br><span class="line">%CPP            cpp</span><br><span class="line">%FPP            cpp -P</span><br><span class="line">%MAKE           make</span><br></pre></td></tr></table></figure></div></li><li><code>arch-XMU_HPC.env</code>的内容<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HDF5_INC_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/include</span><br><span class="line"><span class="built_in">export</span> HDF5_LIB_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/lib</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> NETCDF_INC_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/include</span><br><span class="line"><span class="built_in">export</span> NETCDF_LIB_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/lib</span><br><span class="line"></span><br><span class="line"><span class="comment">#export BLITZ_INC_DIR=&quot;/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/blitz/include&quot;</span></span><br><span class="line"><span class="comment">#export BLITZ_LIB_DIR=&quot;/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/blitz/lib&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#export ZLIB_INC_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib/include</span></span><br><span class="line"><span class="comment">#export ZLIB_LIB_DIR=/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/zlib/lib</span></span><br></pre></td></tr></table></figure></div></li><li><code>arch-XMU_HPC.path</code>的内容<div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">NETCDF_INCDIR=<span class="string">&quot;-I<span class="variable">$NETCDF_INC_DIR</span>&quot;</span></span><br><span class="line">NETCDF_LIBDIR=<span class="string">&quot;-Wl,&#x27;--allow-multiple-definition&#x27; -L<span class="variable">$NETCDF_LIB_DIR</span>&quot;</span></span><br><span class="line"><span class="comment">#NETCDF_LIBDIR=&quot;-L$NETCDF_LIB_DIR&quot;</span></span><br><span class="line">NETCDF_LIB=<span class="string">&quot;-lnetcdf -lnetcdff&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MPI_INCDIR=&quot;&quot;</span></span><br><span class="line"><span class="comment">#MPI_LIBDIR=&quot;&quot;</span></span><br><span class="line"><span class="comment">#MPI_LIB=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">HDF5_INCDIR=<span class="string">&quot;-I<span class="variable">$HDF5_INC_DIR</span>&quot;</span></span><br><span class="line">HDF5_LIBDIR=<span class="string">&quot;-L<span class="variable">$HDF5_LIB_DIR</span>&quot;</span></span><br><span class="line">HDF5_LIB=<span class="string">&quot;-lhdf5_hl -lhdf5 -lhdf5 -lz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ZLIB_INCDIR=&quot;-I $ZLIB_INC_DIR&quot;</span></span><br><span class="line"><span class="comment">#ZLIB_LIBCDIR=&quot;-I $ZLIB_LIB_DIR&quot;</span></span><br><span class="line"><span class="comment">#ZLIB_LIB=&quot;-lz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#BOOST_INCDIR=&quot;-I $BOOST_INC_DIR&quot;</span></span><br><span class="line"><span class="comment">#BOOST_LIBDIR=&quot;-L $BOOST_LIB_DIR&quot;</span></span><br><span class="line"><span class="comment">#BOOST_LIB=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个耦合器是后来装的可写可不写</span></span><br><span class="line">OASIS_INCDIR=<span class="string">&quot;-I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/OASIS3-MCT_5.0/include&quot;</span></span><br><span class="line">OASIS_LIBDIR=<span class="string">&quot;-L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/OASIS3-MCT_5.0/lib&quot;</span></span><br><span class="line">OASIS_LIB=<span class="string">&quot;-lpsmile.MPI1 -lscrip -lmct -lmpeu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#BLITZ_INCDIR=&quot;-I /YOUR_HOME_DIR//Build_NEMO/LIBRARIES/blitz/include&quot;</span></span><br><span class="line"><span class="comment">#BLITZ_LIBDIR=&quot;-L /YOUR_HOME_DIR//Build_NEMO/LIBRARIES/blitz/lib&quot;</span></span><br><span class="line"><span class="comment">#BLITZ_LIB=&quot;-lblitz&quot;</span></span><br></pre></td></tr></table></figure></div></li></ul></li><li><p>修改根目录下的<code>bld.cfg</code>文件其中的一行</p>  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"></span><br><span class="line">nano bld.cfg</span><br><span class="line"><span class="comment">#修改这行</span></span><br><span class="line">bld::tool::cflags    %CFLAGS %CBASE_INC -I<span class="variable">$&#123;PWD&#125;</span>/extern/src_netcdf -I<span class="variable">$&#123;PWD&#125;</span>/extern/boost/include -I<span class="variable">$&#123;PWD&#125;</span>/extern/rapidxml/include -I<span class="variable">$&#123;PWD&#125;</span>/extern/blitz/include</span><br></pre></td></tr></table></figure></div><p>其中的<code>src_netcdf</code>改为<code>src_netcdf4</code></p></li><li><p>回到xios的目录下，编译(这个时间巨长)</p>  <div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./make_xios --full --prod --arch XMU_HPC -j8 |&amp; tee compile_log.txt</span><br></pre></td></tr></table></figure></div><p>  ps：xios-2.5版本可以用在nemo-4.0.7版本，但是nemo4.2不能用2.5版本，需要用到中间版本（就是我们下载的这个）；（nemo4.2用XIOS3的时候会报错显示perl5的错误，具体要怎么修改没有去看，因为中间版本可以用了，实在是懒得折腾了）</p></li></ol><h1 id="三、下载NEMO源代码并配置"><a href="#三、下载NEMO源代码并配置" class="headerlink" title="三、下载NEMO源代码并配置"></a>三、下载NEMO源代码并配置</h1><ul><li>下载代码<br>  因为nemo4.2不再支持svn了，需要用git，可以先在本地下载好，用ftp传送到服务器上。本地下载的命令是：<br>  <code>git clone https://forge.nemo-ocean.eu/nemo/nemo.git nemo_4.2.0</code></li><li>在<code>arch</code>文件夹下，创建并修改<code>arch-XMU_HPC.fcm</code>  <div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">%NCDF_HOME           /YOUR_HOME_DIR//Build_NEMO/LIBRARIES/netcdf/</span><br><span class="line">%HDF5_HOME           /YOUR_HOME_DIR//Build_NEMO/LIBRARIES/hdf5/</span><br><span class="line">%XIOS_HOME           /YOUR_HOME_DIR//Build_NEMO/LIBRARIES/xios-t/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%OASIS_INC           -I/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/OASIS3-MCT_5.0/build-static/lib/mct -I/dat$</span><br><span class="line">%OASIS_LIB           -L/YOUR_HOME_DIR//Build_NEMO/LIBRARIES/OASIS3-MCT_5.0/lib -lpsmile.MPI1 -lmct -lm$</span><br><span class="line"></span><br><span class="line">%NCDF_INC            -I%NCDF_HOME/include -I%NCDF_HOME/include</span><br><span class="line">%NCDF_LIB            -L%NCDF_HOME/lib -L%NCDF_HOME/lib -lnetcdff -lnetcdf -lstdc++</span><br><span class="line">%XIOS_INC            -I%XIOS_HOME/inc</span><br><span class="line">%XIOS_LIB            -L%XIOS_HOME/lib -lxios</span><br><span class="line"></span><br><span class="line">%CPP                 cpp -Dkey_nosignedzero</span><br><span class="line">%CPPFLAGS            -P -traditional</span><br><span class="line"></span><br><span class="line">%FC                  mpif90</span><br><span class="line">%FCFLAGS             -fdefault-real-8 -O3 -funroll-all-loops -fcray-pointer -cpp -ffree-line-length-none</span><br><span class="line">%FFLAGS              %FCFLAGS</span><br><span class="line">%LD                  mpif90</span><br><span class="line">%FPPFLAGS           -P -C  -traditional</span><br><span class="line">%LDFLAGS</span><br><span class="line"><span class="comment">#%LDFLAGS             -kml=parallel</span></span><br><span class="line">%AR                  ar</span><br><span class="line">%ARFLAGS             -rs</span><br><span class="line">%MK                  make</span><br><span class="line">%USER_INC            %XIOS_INC %OASIS_INC  %NCDF_INC</span><br><span class="line">%USER_LIB            %XIOS_LIB %OASIS_LIB  %NCDF_LIB</span><br><span class="line"></span><br><span class="line"><span class="comment">#%CC                  mpicc</span></span><br><span class="line"><span class="comment">#%CFLAGS              -O3 -march=native -mtune=native</span></span><br></pre></td></tr></table></figure></div>  最后的文件夹树的样子：</li></ul><p>  <img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/image-20240322112349782.png" alt="image-20240322112349782"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/19/hello-world/"/>
      <url>/2024/03/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><h2 id="Test-insert-picture"><a href="#Test-insert-picture" class="headerlink" title="Test insert picture"></a>Test insert picture</h2><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/AIRPLAN1.JPG" alt="AIRPLAN1"></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>部署博客问题记录</title>
      <link href="/2024/03/19/edit_blog_on_2devices/"/>
      <url>/2024/03/19/edit_blog_on_2devices/</url>
      
        <content type="html"><![CDATA[<p>小目标：</p><p>​搞个图床贴图</p><p>​评论区(done)</p><p>​修改代码块样式</p><p>​修改字体样式（好像电脑看有点小啊）</p><p>​写一堆！！！乱七八糟的！</p><p>记录帖</p><h2 id="1-两台电脑同步部署"><a href="#1-两台电脑同步部署" class="headerlink" title="1. 两台电脑同步部署"></a>1. 两台电脑同步部署</h2><p>参考链接：<a href="https://blog.csdn.net/K1052176873/article/details/122879462">真的很清晰，我一个小白都懂了</a></p><p>之后的日常工作流程</p><p>开始时：</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure></div><p>快乐的写写写！！！！</p><p>哈～</p><p>终于写完了！！！</p><p>hexo 部署到main branch</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></div><p>Git 来同步我们的修改</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m (some comments)</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></div><p>ps: 经常用到的git命令</p><div class="highlight-wrap" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch <span class="comment">#查看当前分支</span></span><br></pre></td></tr></table></figure></div><h2 id="2-用MobaXterm使用hexo-d时，一直提示要密码"><a href="#2-用MobaXterm使用hexo-d时，一直提示要密码" class="headerlink" title="2. 用MobaXterm使用hexo d时，一直提示要密码"></a>2. 用MobaXterm使用hexo d时，一直提示要密码</h2><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/344314336">git pull&#x2F;push每次都要输入用户名密码的解决办法 - 知乎 (zhihu.com)</a></p><p><code>git config --global credential.helper store</code></p><h2 id="3-评论区"><a href="#3-评论区" class="headerlink" title="3. 评论区"></a>3. 评论区</h2><p>参考链接：<a href="https://roife.github.io/posts/use-utterances-for-blog-comment/">使用 Utterances 为静态博客添加评论 | ROIFE BLOG</a></p><p>修改cactus的<code>.\themes\_config.yml</code></p><h2 id="4-图床测试"><a href="#4-图床测试" class="headerlink" title="4. 图床测试"></a>4. 图床测试</h2><p><img src="https://cdn.jsdelivr.net/gh/jiaoyueLIB/images@main/img/AIRPLAN2.JPG" alt="AIRPLAN2"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
